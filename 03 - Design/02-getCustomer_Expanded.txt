title getCustomer Expanded
participant Hotel
participant CustomerMapper
database Database
entity c

alt customer already in cache
Hotel->CustomerMapper:getCustomer(name : String, phone : String, VIP: int)
activate CustomerMapper
CustomerMapper->CustomerMapper:getFromCacheByDetails(name : String, phone : String, VIP: int)
note left of CustomerMapper:Customer found in cache
CustomerMapper-->Hotel:return c : Customer
deactivate CustomerMapper
else customer not already in cache
Hotel->CustomerMapper:getCustomer(name : String, phone : String, VIP: int))
activate CustomerMapper
CustomerMapper->CustomerMapper:getFromCacheByDetails(name : String, phone : String, VIP: int))
note left of CustomerMapper:Customer not found in cache

CustomerMapper->CustomerMapper:getCustomer(sql : String)
activate CustomerMapper
CustomerMapper->Database:executeQuery(sql : String)
CustomerMapper->*c:PersistentCustomer(oid: int, name : String, number : String, VIP: int)
activate c
c-->CustomerMapper:
deactivate c
CustomerMapper-->CustomerMapper:return c
deactivate CustomerMapper

CustomerMapper-->Hotel:return c : Customer
deactivate CustomerMapper
else customer not already in cache or database
Hotel->CustomerMapper:getCustomer(name, phone, VIP)
activate CustomerMapper
CustomerMapper->CustomerMapper:getFromCacheByDetails(name, phone, VIP)
note left of CustomerMapper:Customer not found in cache

CustomerMapper->CustomerMapper:getCustomer(sql : String)
activate CustomerMapper
CustomerMapper->Database:executeQuery(sql : String)

CustomerMapper-->CustomerMapper:
deactivate CustomerMapper

note left of CustomerMapper:Customer not found in database

CustomerMapper->CustomerMapper:addCustomer(name : String, phone : String, VIP: int)
activate CustomerMapper

CustomerMapper->CustomerMapper:getFromCacheByDetails(name : String, phone : String, VIP: int))
note over CustomerMapper:still not there
CustomerMapper->Database:executeUpdate(sql : String)
note over CustomerMapper:inserted into database\nObject is not created because we need to know what oid was generated by the database

CustomerMapper->CustomerMapper:getCustomer(name : String, phone : String, VIP: int)

activate CustomerMapper
CustomerMapper->CustomerMapper:getFromCacheByDetails(name : String, phone : String, VIP: int)
note over CustomerMapper:not in cache yet
CustomerMapper->CustomerMapper:getCustomer(sql : String)
activate CustomerMapper
CustomerMapper->Database:executeQuery(sql : String)
CustomerMapper->*c:PersistentCustomer(oid: int, name : String, number : String, VIP: int)
activate c
c-->CustomerMapper:
deactivate c
CustomerMapper-->CustomerMapper:return c
deactivate CustomerMapper
CustomerMapper->CustomerMapper:addToCache(c : Customer)

CustomerMapper-->CustomerMapper:return c
deactivate CustomerMapper

CustomerMapper-->CustomerMapper:return c
deactivate CustomerMapper
CustomerMapper-->Hotel:return c : Customer
deactivate CustomerMapper
end
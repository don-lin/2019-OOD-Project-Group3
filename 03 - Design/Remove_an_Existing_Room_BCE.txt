actor Boss
boundary RoomDialog
boundary Alert
boundary BossUI

control ReservationSystem
participant Hotel
entity Room (current)
entity Room (selected)
participant RoomMapper
database Database
Boss->BossUI:mouseClick(arg,i)
activate BossUI

BossUI->BossUI:RoomButtonActionListener(i:int)

BossUI->ReservationSystem:getRoom(id:int)
activate ReservationSystem

ReservationSystem->Room (current):getRoom(id:int)
activate Room (current)

Room (current)->ReservationSystem:return r : Room
deactivate Room (current)
ReservationSystem->BossUI:return r : Room
deactivate ReservationSystem

BossUI->BossUI:actionPerformed(arg:ActionEvent)

BossUI->*RoomDialog:RoomDialog()
activate RoomDialog
RoomDialog-->BossUI:
deactivate RoomDialog

BossUI->RoomDialog:showAndWait()
activate RoomDialog
RoomDialog->Boss:
Boss-->RoomDialog:
RoomDialog-->BossUI:
deactivate RoomDialog





BossUI->ReservationSystem:cancelSelected()
activate ReservationSystem

ReservationSystem->ReservationSystem:observerMessage(s : String, true : Boolean)
activate ReservationSystem
ReservationSystem->BossUI:message(message : String, true : Boolean)
activate BossUI
BossUI->*Alert:Alert( confirmation : AlertType)
activate Alert
Alert-->BossUI:
deactivate Alert

BossUI->Alert:showAndWait();
activate Alert
Alert->Boss:
Boss-->Alert:
note over Alert:user selects OK
Alert-->BossUI:return true
deactivate Alert
BossUI-->ReservationSystem:return true
deactivate BossUI



ReservationSystem->Hotel:removeRoom(selectedRoom : Room)
activate Hotel
Hotel->RoomMapper:deleteRoom(r : Room)
activate RoomMapper
RoomMapper->RoomMapper:performUpdate(sql : String)
activate RoomMapper
RoomMapper->Database:executeUpdate(sql : String)
RoomMapper-->RoomMapper:
deactivate RoomMapper
RoomMapper-->Hotel:
deactivate RoomMapper
Hotel-->ReservationSystem:
deactivate Hotel

ReservationSystem-->BossUI:
deactivate ReservationSystem

BossUI-->Boss:
deactivate BossUI
